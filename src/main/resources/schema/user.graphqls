type User {
    userIdx: Long!
    userName: String!
    password: String!
    roles: [UserRole]
    createdAt: DateTime!
    updatedAt: DateTime!
}

enum UserRole {
    ADMIN
    USER
}

input UserInput {
    username: String!
    password: String!
    roles: [UserRole]!
}

input UserIdxInput {
    userIdx: Long!
}

extend type Query {
    users: [User!]!
    findUserByIdx(input: UserIdxInput!): User
}

extend type Mutation {
    createUser(input: UserInput!): String
    updateUser(idxInput: UserIdxInput!, userInput: UserInput!): String
    deleteUser(input: UserIdxInput!): User
}